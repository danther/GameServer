doctype html
html
  head
    title= title
    link(rel='stylesheet', href='/stylesheets/style.css')

    script(type='text/javascript' src='http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js').

    script(type='text/javascript').

      var idMatch = getUrlVars()["idMatch"];

      function getUrlVars() {
        var vars = {};
        var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {
          vars[key] = value;
        });
        return vars;
      }

      var socketFunction;
      $(document).ready(function () {
        socketFunction = new connect();
      });

      function reset(){
        socketFunction.closeConnection();
        //$("#chatArea").val('');
        //$("#chatInput").val('');
        socketFunction = new connect();
      }

      var logged = false;
      function sendLogin(option){
        if ($("#chatInput").val().length <= 2){
          writeMSG('system', 'Username too short');
        }else if (!logged){
          var msg_toSend = JSON.stringify({command: option, arg1: idMatch, arg2: $("#chatInput").val()})
          socketFunction.sendMSG(msg_toSend);
        }else{
          writeMSG('system', 'Already logged');
        }
        $("#chatInput").val('');
      }

      function sendChat(option){
        if ($("#chatInput").val().length <= 1){
          writeMSG('system', 'Message too short');
        }else{
          var msg_toSend = JSON.stringify({command: option, arg1: $("#chatInput").val()})
          socketFunction.sendMSG(msg_toSend);
        }
        $("#chatInput").val('');
      }

      function sendClose(option){
        var msg_toSend = JSON.stringify({command: option})
        socketFunction.sendMSG(msg_toSend);
        $("#chatInput").val('');
      }

      function parseMSG() {
        var option = $( "#chatOptions option:selected" ).text();
        option = option.toString().toLowerCase();

        switch (option){
          case "login": sendLogin(option); break;
          case "chat": sendChat(option); break;
          case "close": sendClose(option); break;
          default: break;
        }
      }

      function connect(){
        var ws = new WebSocket("ws://http://game05dad.azurewebsites.net:3000/", 'playgame' );

        this.sendMSG = function sendMSG(msg){
          ws.send(msg);
        }

        ws.onopen = function(){
          writeMSG('system', 'Conection established');
        };
        ws.onmessage = function (evt){
          var msgParsed = JSON.parse(evt.data);
          if (msgParsed.response == undefined){
            writeMSG('system', 'Error on message');
          }else if (msgParsed.msgID != undefined){
            writeMSG(msgParsed.msgID, msgParsed.response);
          }else{
            writeMSG('server', msgParsed.response);
          }
        };
        ws.onclose = function(){
          writeMSG('system', 'Connection closed');
        };

        this.closeConnection = function closeConnection(){
          ws.removeEventListener("open", ws.onopen);
          ws.removeEventListener("message", ws.onmessage);
          ws.removeEventListener("close", ws.onclose);
          ws.close();
        }

      }

      function writeMSG(sender, text){
        $("#chatArea").val($("#chatArea").val() + sender + ' : ' + text + '\n');
      }

body
  h1= title
  p Cliente web del juego

  #container.textbox

    textarea#chatArea(class='textArea' rows='12' cols='100' readonly style={resize: 'none'})
    br

    input#chatInput(type='textbox' style={width: '35em', clear: 'both', margin: '0em 1em'})

    select#chatOptions(style={clear: 'both', margin: '2em 1em'})
      - var optionsAvaible = ["Login", "Chat", "Close"];
      for item in optionsAvaible
        option(value= item) #{item}

    button#chatButton(type='button' style={clear: 'both', margin: '0em 1em'} onclick='parseMSG()') Send
    button#chatButton(type='button' style={clear: 'both', margin: '1em 1em'} onclick='reset()') Reset